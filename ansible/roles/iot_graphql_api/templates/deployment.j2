kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: {{ iot_graphql_api_application }}
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/component: iot-graphql-api
    app.kubernetes.io/instance: iot-graphql-api
  name: {{ iot_graphql_api_application }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: {{ iot_graphql_api_application }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: {{ iot_graphql_api_application }}
    spec:
      containers:
        - name: iot-graphql-api
          image: {{ iot_graphql_api_image }}
          env:
            - name: NODE_ENV
              value: prod
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: {{ iot_postgresql_user_key }}
                  name: {{ iot_postgresql_credentials_secret }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ iot_postgresql_password_key }}
                  name: {{ iot_postgresql_credentials_secret }}
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: {{ iot_postgresql_database_key }}
                  name: {{ iot_postgresql_credentials_secret }}
            - name: DB_HOST
              value: {{ iot_postgresql_application }}.{{ application_namespace }}.svc
            - name: METER_STATUS_SERVICE_URL
              value: {{ iot_graphql_api_meter_status_url }}
            - name: METER_AGGREGATED_STATUS_SERVICE_URL
              value: {{ iot_graphql_api_meter_aggregated_status_url }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: "{{ iot_graphql_api_resources_requests_cpu }}"
              memory: "{{ iot_graphql_api_resources_requests_memory }}"
            limits:
              cpu: "{{ iot_graphql_api_resources_limits_cpu }}"
              memory: "{{ iot_graphql_api_resources_limits_memory }}"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ iot_graphql_api_service_account }}
      serviceAccountName: {{ iot_graphql_api_service_account }}  
      terminationGracePeriodSeconds: 30
