kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: {{ iot_streams_application }}
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/component: {{ iot_streams_application }}
    app.kubernetes.io/instance: {{ iot_streams_application }}
  name: {{ iot_streams_application }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ iot_streams_replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: {{ iot_streams_application }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: {{ iot_streams_application }}
    spec:
      containers:
        - name: iot-streams
          image: {{ iot_streams_image }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: "{{ iot_streams_resources_requests_cpu }}"
              memory: "{{ iot_streams_resources_requests_memory }}"
            limits:
              cpu: "{{ iot_streams_resources_limits_cpu }}"
              memory: "{{ iot_streams_resources_limits_memory }}"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: config
              mountPath: /deployments/config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ iot_streams_service_account }}
      serviceAccountName: {{ iot_streams_service_account }}  
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          secret:
            secretName: {{ iot_streams_secret }}
            defaultMode: 420